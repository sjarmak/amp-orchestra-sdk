name: Cross-Platform CI

on:
  push:
    branches: [main]
    paths:
      - '.github/workflows/cross-platform-ci.yml'
      - 'desktop-ui/src-tauri/**'
      - 'packages/**'
      - 'pnpm-workspace.yaml'
      - 'package.json'
      - 'pnpm-lock.yaml'
  pull_request:
    branches: [main]
    paths:
      - '.github/workflows/cross-platform-ci.yml'
      - 'desktop-ui/src-tauri/**'
      - 'packages/**'
      - 'pnpm-workspace.yaml'
      - 'package.json'
      - 'pnpm-lock.yaml'
  workflow_dispatch:

jobs:
  build-and-test:
    strategy:
      fail-fast: false
      matrix:
        include:
          # Test both legacy_node ON and OFF for each platform
          - os: ubuntu-latest
            name: Linux-Modern
            shell: bash
            features: ""
          - os: ubuntu-latest
            name: Linux-Legacy
            shell: bash
            features: "legacy_node"
          - os: windows-latest
            name: Windows-Modern
            shell: powershell
            features: ""
          - os: windows-latest
            name: Windows-Legacy
            shell: powershell
            features: "legacy_node"
          - os: macos-latest
            name: macOS-Modern
            shell: bash
            features: ""
          - os: macos-latest
            name: macOS-Legacy
            shell: bash
            features: "legacy_node"
    
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.name }} Build & Test
    timeout-minutes: 45
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            build-essential \
            wget \
            file \
            libssl-dev \
            librsvg2-dev

      - name: Install system dependencies (Windows)
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          # Install winpty for PTY support
          choco install winpty -y
          refreshenv

      - name: Install JavaScript dependencies
        shell: ${{ matrix.shell }}
        run: |
          pnpm install --frozen-lockfile

      - name: Build JavaScript packages
        shell: ${{ matrix.shell }}
        run: |
          pnpm build

      - name: Run TypeScript typecheck
        shell: ${{ matrix.shell }}
        run: |
          pnpm typecheck

      - name: Run JavaScript tests
        shell: ${{ matrix.shell }}
        run: |
          pnpm test

      - name: Build Rust project (Unix)
        if: runner.os != 'Windows'
        run: |
          cd desktop-ui/src-tauri
          if [ -n "${{ matrix.features }}" ]; then
            cargo build --locked --features "${{ matrix.features }}"
          else
            cargo build --locked
          fi

      - name: Build Rust project (Windows)
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          cd desktop-ui\src-tauri
          if ("${{ matrix.features }}" -ne "") {
            cargo build --locked --features "${{ matrix.features }}"
          } else {
            cargo build --locked
          }

      - name: Run Rust tests (Unix)
        if: runner.os != 'Windows'
        run: |
          cd desktop-ui/src-tauri
          if [ -n "${{ matrix.features }}" ]; then
            cargo test --all --locked --features "${{ matrix.features }}"
          else
            cargo test --all --locked
          fi

      - name: Run Rust tests (Windows)
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          cd desktop-ui\src-tauri
          if ("${{ matrix.features }}" -ne "") {
            cargo test --all --locked --features "${{ matrix.features }}"
          } else {
            cargo test --all --locked
          }

      - name: Run PTY smoke test (Unix)
        if: runner.os != 'Windows'
        run: |
          cd desktop-ui/src-tauri
          if [ -n "${{ matrix.features }}" ]; then
            cargo test --test pty_smoke_test --locked --features "${{ matrix.features }}" -- --nocapture
          else
            cargo test --test pty_smoke_test --locked -- --nocapture
          fi

      - name: Run PTY smoke test (Windows)
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          cd desktop-ui\src-tauri
          if ("${{ matrix.features }}" -ne "") {
            cargo test --test pty_smoke_test --locked --features "${{ matrix.features }}" -- --nocapture
          } else {
            cargo test --test pty_smoke_test --locked -- --nocapture
          }

      - name: Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}-build-artifacts
          path: |
            desktop-ui/src-tauri/target/debug/
            packages/*/dist/
          retention-days: 1
